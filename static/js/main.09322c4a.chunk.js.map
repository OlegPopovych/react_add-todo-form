{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["Users","id","name","username","email","Todos","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","todosWithUsers","todosFromServer","usersFromServer","filter","App","useState","inputValue","setInputValue","selectedUserId","setSelectedUserId","setTodos","inputError","setInputError","selectError","setSelectError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","elem","prev","type","placeholder","value","onChange","target","replace","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09322c4a.chunk.js","sourcesContent":["import { User } from '../types/User';\n\nconst Users: User[] = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n\nexport default Users;\n","import { Todo } from '../types/Todo';\n\nconst Todos: Todo[] = [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n\nexport default Todos;\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { TodosWithUsers } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodosWithUsers;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodosWithUsers } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodosWithUsers[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo, TodosWithUsers } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst todosWithUsers: TodosWithUsers[] = todosFromServer.map((todo: Todo) => {\n  return {\n    ...todo,\n    user: usersFromServer.filter((user: User) => user.id === todo.userId)[0],\n  };\n});\n\nexport const App = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [inputError, setInputError] = useState(false);\n  const [selectError, setSelectError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!inputValue) {\n      setInputError(true);\n    }\n\n    if (!selectedUserId) {\n      setSelectError(true);\n    }\n\n    if (!inputValue || !selectedUserId) {\n      return;\n    }\n\n    const newTodo: TodosWithUsers = {\n      id: (Math.max(...todos.map(elem => elem.id)) + 1),\n      title: inputValue,\n      completed: false,\n      userId: selectedUserId,\n      user: usersFromServer\n        .filter((user: User) => user.id === selectedUserId)[0],\n    };\n\n    setTodos(prev => [...prev, newTodo]);\n    setInputValue('');\n    setSelectedUserId(0);\n  };\n\n  const onSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(Number(event.target.value));\n    setSelectError(false);\n  };\n\n  const onSetTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, ''));\n    setInputError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              value={inputValue}\n              onChange={onSetTitle}\n            />\n          </label>\n          {inputError && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={onSelectUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user) => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {selectError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}